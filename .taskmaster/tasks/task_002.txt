# Task ID: 2
# Title: Design System Implementation
# Status: done
# Dependencies: 1
# Priority: high
# Description: Create a comprehensive design system using Tailwind CSS based on the specified color palette, typography, and spacing guidelines to ensure consistent UI across the platform for NutriSensia.
# Details:
Extend tailwind.config.js with NutriSensia's color palette: Primary (#2E7D5E, #FAFBFC, #1B4F3F), Secondary (#4A9B7B, #E8F3EF, #B8D4C7), Accent (#00A693, #7FD1C1, #F4A261), Functional (#22C55E, #EF4444, #F59E0B, #3B82F6), Neutral (#F8F9FA, #9CA3AF, #374151, #E5E7EB), Background (#FFFFFF, #F8FAFB, #F0F7F4). Configure typography with Inter for web, SF Pro for iOS, and Roboto for Android with weights 400, 500, 600, 700. Implement heading sizes (H1-H4), body text (Large, Standard, Small), and special text styles (Caption, Button, Link, Label). Create a spacing system (2dp, 4dp, 8dp, 12dp, 16dp, 24dp, 32dp, 48dp, 64dp). Implement reusable UI components with variants: Buttons (Primary, Secondary, Ghost, Destructive), Cards (Primary, Dashboard, Nutrition), Inputs (Standard, Search, Textarea), Navigation (Sidebar, Tabs), and Icons (Primary, Small, Navigation, Feature). Define animations (Standard, Emphase, Micro, Page, Loading). Ensure WCAG AA compliance with 4.5:1 minimum contrast, 2dp Primary Green focus states, and minimum 44dp touch targets. Implement dark mode support with CSS variables. Support French as primary language with professional styling for Swiss insurance compliance.

# Test Strategy:
Visual regression testing with Chromatic or similar tool. Accessibility testing with axe-core to verify WCAG AA compliance, including contrast ratios and focus states. Component unit tests with React Testing Library. Cross-browser compatibility testing. Mobile responsiveness testing across different viewport sizes. Animation testing for timing and performance. Language display testing for French primary support. Test all component states including empty states, loading skeletons, and error states.

# Subtasks:
## 1. Tailwind Configuration Setup [done]
### Dependencies: None
### Description: Extend tailwind.config.js with NutriSensia's custom colors, typography, and spacing scale according to design specifications
### Details:
Configure tailwind.config.js to include NutriSensia's color palette: Primary (#2E7D5E, #FAFBFC, #1B4F3F), Secondary (#4A9B7B, #E8F3EF, #B8D4C7), Accent (#00A693, #7FD1C1, #F4A261), Functional (#22C55E, #EF4444, #F59E0B, #3B82F6), Neutral (#F8F9FA, #9CA3AF, #374151, #E5E7EB), Background (#FFFFFF, #F8FAFB, #F0F7F4). Set up typography with Inter for web, SF Pro for iOS, and Roboto for Android with weights 400, 500, 600, 700. Implement a comprehensive spacing scale (2dp, 4dp, 8dp, 12dp, 16dp, 24dp, 32dp, 48dp, 64dp). Configure CSS variables for theme values to enable runtime customization and dark mode support.

## 4. Core UI Component Development [done]
### Dependencies: 2.1
### Description: Build essential reusable UI components with variants following the NutriSensia design system specifications
### Details:
Develop core UI components including: Buttons (Primary 48dp, Secondary 48dp, Ghost 44dp, Destructive 48dp), Cards (Primary 12dp radius, Dashboard 16dp radius, Nutrition 12dp radius), Inputs (Standard 56dp, Search 44dp, Textarea 96dp min), Navigation (Sidebar 240dp, Tabs 48dp), and Icons (Primary 24dp, Small 20dp, Navigation 28dp, Feature 32dp). Implement component props for customization while maintaining design consistency. Ensure components follow a mobile-first approach and are responsive across all viewport sizes. Implement animation standards: Standard (200ms ease-out), Emphase (300ms cubic-bezier), Micro (150ms ease-in-out), Page (350ms cubic-bezier), and Loading (1200ms linear).

## 5. Fix ESLint errors in Storybook documentation [done]
### Dependencies: 2.4
### Description: Resolve minor ESLint errors related to unescaped apostrophes in the Storybook documentation to enable final commit
### Details:
Identify and fix all instances of unescaped apostrophes in Storybook documentation files. Run ESLint with --fix option where possible. Manually review and correct any remaining issues. Ensure all documentation strings properly escape special characters. Verify fixes with a full ESLint check before committing. Update any documentation guidelines to prevent similar issues in future component documentation.

## 7. Core UI Component Development [done]
### Dependencies: 2.1
### Description: Build essential reusable UI components with variants following the NutriSensia design system specifications
### Details:
Develop core UI components including: Buttons (Primary 48dp, Secondary 48dp, Ghost 44dp, Destructive 48dp), Cards (Primary 12dp radius, Dashboard 16dp radius, Nutrition 12dp radius), Inputs (Standard 56dp, Search 44dp, Textarea 96dp min), Navigation (Sidebar 240dp, Tabs 48dp), and Icons (Primary 24dp, Small 20dp, Navigation 28dp, Feature 32dp). Implement component props for customization while maintaining design consistency. Ensure components follow a mobile-first approach and are responsive across all viewport sizes. Implement animation standards: Standard (200ms ease-out), Emphase (300ms cubic-bezier), Micro (150ms ease-in-out), Page (350ms cubic-bezier), and Loading (1200ms linear).

## 6. Core UI Component Development [done]
### Dependencies: 2.1
### Description: Build essential reusable UI components with variants following the NutriSensia design system specifications
### Details:
Develop core UI components including: Buttons (Primary 48dp, Secondary 48dp, Ghost 44dp, Destructive 48dp), Cards (Primary 12dp radius, Dashboard 16dp radius, Nutrition 12dp radius), Inputs (Standard 56dp, Search 44dp, Textarea 96dp min), Navigation (Sidebar 240dp, Tabs 48dp), and Icons (Primary 24dp, Small 20dp, Navigation 28dp, Feature 32dp). Implement component props for customization while maintaining design consistency. Ensure components follow a mobile-first approach and are responsive across all viewport sizes. Implement animation standards: Standard (200ms ease-out), Emphase (300ms cubic-bezier), Micro (150ms ease-in-out), Page (350ms cubic-bezier), and Loading (1200ms linear).

## 3. Accessibility Implementation [done]
### Dependencies: 2.2
### Description: Ensure all components meet WCAG 2.1 AA compliance standards with NutriSensia-specific accessibility guidelines
### Details:
Implement proper ARIA attributes for all components. Ensure sufficient color contrast ratios (minimum 4.5:1 per WCAG AA). Add keyboard navigation support with logical tab order. Implement focus management with 2dp Primary Green focus indicators at 20% opacity. Ensure touch targets are minimum 44dp, with 48dp recommended. Test with screen readers. Create accessible form validation and error messaging. Implement language support with French as primary language.

## 2. Core UI Component Development [done]
### Dependencies: 2.1
### Description: Build essential reusable UI components with variants following the NutriSensia design system specifications
### Details:
Develop core UI components including: Buttons (Primary 48dp, Secondary 48dp, Ghost 44dp, Destructive 48dp), Cards (Primary 12dp radius, Dashboard 16dp radius, Nutrition 12dp radius), Inputs (Standard 56dp, Search 44dp, Textarea 96dp min), Navigation (Sidebar 240dp, Tabs 48dp), and Icons (Primary 24dp, Small 20dp, Navigation 28dp, Feature 32dp). Implement component props for customization while maintaining design consistency. Ensure components follow a mobile-first approach and are responsive across all viewport sizes. Implement animation standards: Standard (200ms ease-out), Emphase (300ms cubic-bezier), Micro (150ms ease-in-out), Page (350ms cubic-bezier), and Loading (1200ms linear).

## 8. Theme Management System Implementation [pending]
### Dependencies: None
### Description: Système complet de gestion des thèmes avec mode sombre, personnalisation en temps réel et accessibilité WCAG 2.1 AA
### Details:
Implémentation complète du système de gestion des thèmes NutriSensia avec hook useTheme, contexte React ThemeContext, composants ThemeSelector (3 variantes), page de test /theme-management, documentation complète, support des préférences d'accessibilité, couleurs personnalisées, et intégration complète dans l'application.

